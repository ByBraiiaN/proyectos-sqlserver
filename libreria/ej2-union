--Guia de Ejercicios Nº 2 (Union)

--1) Se quiere saber qué vendedores y clientes hay en la empresa; para los casos en que su teléfono y
--dirección de e-mail sean conocidos. Se deberá visualizar el código, nombre y si se trata de un
--cliente o de un vendedor. Ordene por la columna tercera y segunda.
select cod_cliente, nom_cliente, 'Cliente'
from clientes
where nro_tel is not null and [e-mail] is not null
union 
select cod_vendedor, nom_vendedor, 'Vendedor'
from vendedores
where nro_tel is not null and [e-mail] is not null
order by 2,3

--2) Emitir un listado donde se muestren qué artículos, clientes y vendedores hay en la empresa.
--Determine los campos a mostrar y su ordenamiento.
select cod_cliente Codigo, nom_cliente Nombre, 'Cliente'
from clientes
union
select cod_articulo, descripcion, 'Articulo'
from articulos
union
select cod_vendedor, nom_vendedor, 'Vendedor'
from vendedores
order by 1

--3) En un mismo listado mostrar todos los artículos que hay en la empresa y los artículos que han sido
--vendidos. Determine Ud. las columnas a mostrar.
select articulos.cod_articulo, descripcion, 'Vendido'
from articulos, detalle_facturas
where articulos.cod_articulo = detalle_facturas.cod_articulo
union
select cod_articulo, descripcion, 'No Vendido'
from articulos
order by 1

--4) Se quiere saber las direcciones (incluido el barrio) tanto de clientes como de vendedores. Para el
--caso de los vendedores, códigos entre 3 y 12. En ambos casos las direcciones deberán ser
--conocidas. Rotule como NOMBRE, DIRECCION, BARRIO, INTEGRANTE (en donde indicará si es
--cliente o vendedor). Ordenado por la primera y la última columna.
--str(altura)
select nom_cliente Nombre, calle + ' ' + convert (varchar,altura) Direccion, barrio Barrio, 'Cliente' Integrante
from clientes, barrios
where clientes.cod_barrio = barrios.cod_barrio
and calle is not null and altura is not null
union
select nom_vendedor Nombre,calle+ ' '+convert (varchar,altura) Direccion, barrio Barrio, 'Vendedor' Integrante
from vendedores, barrios
where vendedores.cod_barrio = barrios.cod_barrio
and calle is not null and altura is not null
and vendedores.cod_vendedor between 3 and 12

--5) Se quiere saber qué clientes hay en la empresa y listar además los clientes que han comparado
--entre el 1/12/2010 y el 1/03/2012. Muestre el código, sin duplicarlos.
select cod_cliente,  'No compro'
from clientes
union
select clientes.cod_cliente, clientes.nom_cliente, 'Compro'
from clientes, facturas
where clientes.cod_cliente = facturas.cod_cliente
and facturas.fecha between '01/12/2010' and '01/02/2012'

--6) Ídem al ejercicio anterior, sólo que además del código, identifique de donde obtiene la información
--(de qué tabla se obtienen los datos).
select cod_cliente,nom_cliente,'Cliente' Tabla
from clientes
union
select clientes.cod_cliente, clientes.nom_cliente, 'Detalle_Facturas'
from clientes, facturas
where clientes.cod_cliente = facturas.cod_cliente
and facturas.fecha between '01/12/2010' and '01/02/2012'

--7) Se quiere saber qué clientes hay en la empresa y quiénes han comprado; para el primer caso para
--nombres que empiecen con letras que van de la “c” a la “l” y para el segundo para facturas que
--oscilen entre 10 y 23. Muestre el código (no elimine los que se repiten).
select cod_cliente Codigo,nom_cliente,'Cliente' Tabla
from clientes
where nom_cliente like '[c-l]%'
union all
select clientes.cod_cliente, clientes.nom_cliente, 'Compro'
from clientes, facturas
where clientes.cod_cliente = facturas.cod_cliente
and facturas.nro_factura between 10 and 23
order by 1
--ver oscilen 10 y 23 otro metodo

--8) Listar todos los artículos que están a la venta cuyo precio unitario oscile entre 10 y 50; también se
--quieren listar los artículos que fueron comprados por los clientes cuyos apellidos comiencen con “M”
--o con “P”.
select cod_articulo, descripcion, 'Venta'
from articulos
where articulos.pre_unitario between 10 and 50
union
select articulos.cod_articulo, descripcion, 'Vendido'
from articulos, detalle_facturas, facturas, clientes
where facturas.nro_factura = detalle_facturas.nro_factura
and clientes.cod_cliente = facturas.cod_cliente
and articulos.cod_articulo = detalle_facturas.cod_articulo
and clientes.ape_cliente like '[M,P]%'
